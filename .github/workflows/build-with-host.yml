name: CMake Build on Host

on:
  workflow_call:
    inputs:
      build-type:
        required: false
        default: 'Debug'
        type: string
        description: 'The CMake build type (CMAKE_BUILD_TYPE) to run.'
      install:
        required: false
        default: false
        type: boolean
      test:
        required: false
        default: true
        type: boolean
      package:
        required: false
        default: false
        type: boolean
      preset-name:
        required: false
        default: 'dev-windows'
        type: string
      os:
        required: false
        default: 'windows-2022'
        type: string
      arch:
        required: false
        default: ''
        type: string

jobs:
  build:
    name: CMake Build
    strategy:
      fail-fast: false
    runs-on: ${{ inputs.os }}
    steps:
    - name: Configure vcpkg to use Github Actions Cache 
      uses: actions/github-script@v6
      with:
        script: |
          core.exportVariable('ACTIONS_CACHE_URL', process.env.ACTIONS_CACHE_URL || '');
          core.exportVariable('ACTIONS_RUNTIME_TOKEN', process.env.ACTIONS_RUNTIME_TOKEN || '');

    - name: Install vcpkg dependencies with Github Actions Cache
      run: vcpkg install --binarysource="clear;x-gha,readwrite"

    - name: CMake Configure
      if: ${{ ! inputs.arch }}
      run: cmake --preset ${{ inputs.preset-name }} --fresh -DCMAKE_BUILD_TYPE=${{ inputs.build-type }}

    - name: CMake Configure Cross-Compile ${{ matrix.config.arch }}
      if: ${{ matrix.config.arch }}
      run: cmake --preset ${{ inputs.preset-name }} --fresh -DCMAKE_BUILD_TYPE=${{ inputs.build-type }} -DNETREMOTE_DISABLE_TESTS=TRUE -A ${{ inputs.arch }}

    - name: CMake Build
      run: cmake --build --preset ${{ inputs.preset-name }} --config ${{ inputs.build-type }}

    - name: CMake Test (ctest)
      if: ${{ inputs.test == true && ! inputs.arch }}
      run: ctest --preset ${{ inputs.preset-name }} -C ${{ inputs.build-type }}

    - name: CMake Install
      if: inputs.install == true
      run: cmake --build --preset ${{ inputs.preset-name }} --target install --config ${{ matrix.build-type }}

    - name: CMake Package (cpack)
      if: inputs.package == true
      run: cpack --preset ${{ inputs.preset-name }} -C ${{ matrix.build-type }}
