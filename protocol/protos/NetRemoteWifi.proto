
syntax = "proto3";

package Microsoft.Net.Remote.Wifi;

import "google/protobuf/field_mask.proto";
import "WifiCore.proto";

//
// General notes:
//
// Despite all fields being implicitly optional in proto3, all fields are
// required to be specified unless their definition is explicitly marked with
// the 'optional' proto keyword.
//

enum WifiAccessPointApplyConfigurationStatus
{
    WifiAccessPointApplyConfigurationStatusUnknown = 0;
    WifiAccessPointApplyConfigurationStatusSucceeded = 1;
    WifiAccessPointApplyConfigurationStatusAccessPointInvalid = 2;
    WifiAccessPointApplyConfigurationStatusAccessPointNotEnabled = 3;
    WifiAccessPointApplyConfigurationStatusBandInactive = 4;
    WifiAccessPointApplyConfigurationStatusOperationNotSupported = 5;
}

message WifiAccessPointApplyConfigurationRequestConfigurationItem
{
    // An optional unique identifier for this configuration request.
    optional string Id = 1;

    // The band the AP should be configured for.
    Microsoft.Net.Wifi.RadioBand Band = 2;

    // The configuration for the AP.
    Microsoft.Net.Wifi.AccessPointConfiguration Configuration = 3;
}

message WifiAccessPointApplyConfigurationResultConfigurationItem
{
    // The unique identifier of the configuration that was requested to be
    // applied. Not populated if not specified in the corresponding request.
    optional string Id = 1;

    // The band the AP was requested to be configured for.
    Microsoft.Net.Wifi.RadioBand Band = 2;

    // The status of applying the configuration.
    WifiAccessPointApplyConfigurationStatus Status = 3;

    // Indicates the parts of the corresponding 'WifiAccessPointApplyConfigurationRequestConfigurationItem.Configuration'
    // field that were successfully applied. Set only when Status != WifiAccessPointApplyConfigurationStatusSucceeded.
    google.protobuf.FieldMask ConfigurationFailuresMask = 4;
}

message WifiAccessPointApplyConfigurationRequest
{
    // The unique identifier of the access point to configure.
    string AccessPointId = 1;

    // All desired configurations for the AP. One configuration item per active
    // band is permitted. The server will neither apply nor persist any
    // configurations for inactive bands.
    repeated WifiAccessPointApplyConfigurationRequestConfigurationItem Configurations = 2;
}

message WifiAccessPointApplyConfigurationResult
{
    // The unique identifier of the access point that was requested to be configured.
    string AccessPointId = 1;

    // The result of each configuration that was requested to be applied.
    // Clients must not assume the order of items will match the order of those
    // in the corresponding request.
    repeated WifiAccessPointApplyConfigurationResultConfigurationItem ConfigurationResults = 2;
}

message WifiEnumerateAccessPointsResultItem
{
    string AccessPointId = 1;
    Microsoft.Net.Wifi.AccessPointCapabilities Capabilities = 2;
    bool IsEnabled = 3;
}

message WifiEnumerateAccessPointsRequest
{
}

message WifiEnumerateAccessPointsResult
{
    repeated Microsoft.Net.Remote.Wifi.WifiEnumerateAccessPointsResultItem AccessPoints = 1;
}
